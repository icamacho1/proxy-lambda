#!/bin/bash

# Function definitions:
function not_valid() 
{
    echo 
    echo Your commit message should look like this:
    echo
    sleep 1
    echo $'\e[38;5;75m'Bug fix:$'\e[0m'
    echo
    echo $'\e[1;33m'Fix in the status controller. The busy dialog was never closed and the user got stuck in that point.$'\e[0m'
    echo $'\e[1;33m'I added and else statement to include a new scenario and binded the context to the success.$'\e[0m'
    sleep 1.5
    echo
    echo $'\e[31m'Build failed, exiting ...$'\e[0m'
    exit 1 
}

function valid() 
{
    echo
    echo $'\e[38;5;75m'$(cat $file_name | head -1)$'\e[0m'
    echo
    echo $'\e[1;33m'$(cat $file_name | head -$message_delimiter | tail -$mesage_body_delimiter)$'\e[0m'
    echo
    echo $'\e[1;32m'Build completed succesfully! $'\e[31m'$'\e[0m'$'\e[0m'
    echo
    sleep 1
    exit 0
}

function main()
{
    # Main script
    # Formatting:
    echo
    echo $'\e[1;33m'Executing commit hook$'\e[0m'
    sleep 1
    echo

    # Validate that the user has written a title:
    message_delimiter=`expr $(cat $file_name | grep -n \# | head -1 | awk -F':' '{print $1}') - 1`
    mesage_body_delimiter=`expr $message_delimiter - 1`
    if [ "$(cat $file_name | head -2 | tail -1 | wc -w)" -eq "0" ]; then
        echo $'\e[1;32m'Title separated from the body  $'\e[0m'
        sleep 1
        body=$(cat $file_name | head -$message_delimiter | tail -$mesage_body_delimiter)
        num_words=$(echo $body | wc -w)
        if [ "$num_words" -lt "15" ]; then
            echo $'\e[31m'Extend yourself, your co-workers will apreciatte a good explanation$'\e[0m'
            not_valid
        fi
        echo $'\e[1;32m'Good explanation  $'\e[0m'
        valid
    fi
    echo $'\e[31m'Title must be separated from the body$'\e[0m'
    not_valid
}
file_name=$1
main
